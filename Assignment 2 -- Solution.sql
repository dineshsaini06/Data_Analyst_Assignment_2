-- Assignment 1 Solutions
Use Mavenmovies;

-------------------- Basic Aggregate Functions: 
-- Question 1: Retrieve the total number of rentals made in the Sakila database. 
-- Hint: Use the COUNT() function. 
Select count(*) from rental;

-- Question 2: Find the average rental duration (in days) of movies rented from the Sakila database.
-- Hint: Utilize the AVG() function. 
Select avg(rental_duration) from film;

-------------------- String Functions:
-- Question 3: Display the first name and last name of customers in uppercase. 
-- Hint: Use the UPPER () function. 
Select upper(first_name) , upper(last_name) from customer;

-- Question 4: Extract the month from the rental date and display it alongside the rental ID. 
-- Hint: Employ the MONTH() function. 
Select rental_id , month(rental_date) as Rental_Month from rental;

-------------------- GROUP BY:
-- Question 5: Retrieve the count of rentals for each customer (display customer ID and the count of rentals). 
-- Hint: Use COUNT () in conjunction with GROUP BY.
Select customer_id , count(rental_id) from rental Group by customer_id;

-- Question 6: Find the total revenue generated by each store. 
-- Hint: Combine SUM() and GROUP BY. 

Select store_ID , sum(p.amount) sum_of_amount from payment as p 
Inner Join customer as c on p.customer_id = c.customer_id
Group by store_id;

-------------------- Joins:
-- Question 7: Display the title of the movie, customer s first name, and last name who rented it. 
-- Hint: Use JOIN between the film, inventory, rental, and customer tables. 
Select title , First_name , Last_name from film as f
Inner Join Inventory as i on f.film_id = i.film_id 
Inner Join rental as r on i.inventory_id = r.inventory_id
Inner Join customer as c on r.customer_id = c.customer_id;

-- Question 8: Retrieve the names of all actors who have appeared in the film "Gone with the Wind." 
-- Hint: Use JOIN between the film actor, film, and actor tables.
Select first_name , last_name from film as f
Inner Join film_actor as fa on f.film_id = fa.film_id
Inner Join actor as a on a.actor_id = fa.actor_id where title = "Gone with the Wind.";

-------------------- GROUP BY:

-- Question 1: Determine the total number of rentals for each category of movies. 
-- Hint: JOIN film_category, film, and rental tables, then use count () and GROUP BY.
Select rating , count(f.film_id) as Film_Count from film as f
Inner Join Inventory as i on i.film_id = f.film_id
Inner Join rental as r on r.inventory_id = i.inventory_id
Group by rating;

-- Question 2: Find the average rental rate of movies in each language. 
-- Hint: JOIN film and language tables, then use AVG () and GROUP BY
Select name , avg(rental_rate) from film as f 
Inner Join Language as l on f.language_id = l.language_id
Group by name;

-------------------- Joins:
-- Question 3: Retrieve the customer names along with the total amount they've spent on rentals. 
-- Hint: JOIN customer, payment, and rental tables, then use SUM() and GROUP BY. 

Select c.first_name , c.last_name , sum(p.amount) from customer as c 
Inner Join payment as p on c.customer_id = p.customer_id
Inner Join rental as r on r.rental_id = p.rental_id 
Group by c.first_name, c.last_name;

-- Question 4: List the titles of movies rented by each customer in a particular city (e.g., 'London'). 
-- Hint: JOIN customer, address, city, rental, inventory, and film tables, then use GROUP BY. 

Select ct.city , count(f.title) as film_count from film as f 
inner join inventory as i on i.film_id = f.film_id
Inner Join rental as r on r.inventory_id = i.inventory_id 
Inner Join customer as c on c.customer_id = r.customer_id
Inner Join address as a on a.address_id = c.address_id
Inner Join city as ct on ct.city_id = a.city_id
Group by ct.city;

-- Question 5 : Display the top 5 rented movies along with the number of times they've been rented. 
-- Hint: JOIN film, inventory, and rental tables, then use cOUNT() and GROUP BY, and limit the results. 

Select f.title , count(r.rental_id) as rental_ID_count from film as f
Inner Join inventory as i on i.film_id = f.film_id
Inner Join rental as r on r.inventory_id = i.inventory_id
Group by f.title
Order by rental_ID_count desc
Limit 5;

-- Question 6: Determine the customers who have rented movies from both stores (store ID 1 and store ID 2). 
-- Hint: Use JOINS with rental, inventory, and customer tables and consider COUNT() and GROUP BY. 

Select c.Customer_id , concat(c.first_name , " " ,c.last_name) from Customer as c 
Inner Join rental as r on c.customer_id = r.customer_id
Inner Join inventory as i on r.inventory_id = i.inventory_id
WHERE i.store_id IN (1 , 2)
GROUP BY c.customer_id , concat(c.first_name , " " , c.last_name);
    
